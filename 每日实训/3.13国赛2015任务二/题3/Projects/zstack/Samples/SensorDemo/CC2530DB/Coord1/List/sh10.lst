###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.10.1.40194/W32 for 8051         14/Mar/2017  10:37:47 #
# Copyright 2004-2011 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  F:\Ã¿ÈÕÊµÑµ\3.13¹úÈü2015ÈÎÎñ¶þ\Ìâ3\Projects\zstack #
#                          \Samples\SensorDemo\SENSOR_DRV\sh10.c              #
#    Command line       =  -f F:\Ã¿ÈÕÊµÑµ\3.13¹úÈü2015ÈÎÎñ¶þ\Ìâ3\Projects\zst #
#                          ack\Samples\SensorDemo\CC2530DB\..\..\..\Tools\CC2 #
#                          530DB\f8wCoord.cfg (-DCPU32MHZ -DROOT=__near_func  #
#                          -DMAC_CFG_APP_PENDING_QUEUE=TRUE                   #
#                          -DZDO_COORDINATOR -DRTR_NWK -DBLINK_LEDS) -f       #
#                          F:\Ã¿ÈÕÊµÑµ\3.13¹úÈü2015ÈÎÎñ¶þ\Ìâ3\Projects\zstack #
#                          \Samples\SensorDemo\CC2530DB\..\..\..\Tools\CC2530 #
#                          DB\f8wConfig.cfg (-DSECURE=0                       #
#                          -DZG_SECURE_DYNAMIC=0 -DREFLECTOR                  #
#                          -DDEFAULT_CHANLIST=0x00100000                      #
#                          -DZDAPP_CONFIG_PAN_ID=0x8888                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116 "-DCONST=const __code"    #
#                          -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE     #
#                          -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100            #
#                          -DRESPONSE_POLL_RATE=100) -DREJOIN_POLL_RATE=440   #
#                          F:\Ã¿ÈÕÊµÑµ\3.13¹úÈü2015ÈÎÎñ¶þ\Ìâ3\Projects\zstack #
#                          \Samples\SensorDemo\SENSOR_DRV\sh10.c -D           #
#                          ZIGBEEPRO -D HOLD_AUTO_START -D BUILD_ALL_DEVICES  #
#                          -D REFLECTOR -D NV_INIT -D NV_RESTORE -D ZTOOL_P1  #
#                          -D xMT_TASK -D DEVICE_LOGICAL_TYPE=0 -D            #
#                          LOG_TYPE=0 -D xLCD_SUPPORTED -D xMT_TASK -lC       #
#                          F:\Ã¿ÈÕÊµÑµ\3.13¹úÈü2015ÈÎÎñ¶þ\Ìâ3\Projects\zstack #
#                          \Samples\SensorDemo\CC2530DB\Coord1\List\ -lA      #
#                          F:\Ã¿ÈÕÊµÑµ\3.13¹úÈü2015ÈÎÎñ¶þ\Ìâ3\Projects\zstack #
#                          \Samples\SensorDemo\CC2530DB\Coord1\List\          #
#                          --diag_suppress Pe001,Pa010 -o                     #
#                          F:\Ã¿ÈÕÊµÑµ\3.13¹úÈü2015ÈÎÎñ¶þ\Ìâ3\Projects\zstack #
#                          \Samples\SensorDemo\CC2530DB\Coord1\Obj\ -e        #
#                          --debug --core=plain --dptr=16,1                   #
#                          --data_model=large --code_model=banked             #
#                          --calling_convention=xdata_reentrant               #
#                          --place_constants=data_rom --nr_virtual_regs 16    #
#                          -I F:\Ã¿ÈÕÊµÑµ\3.13¹úÈü2015ÈÎÎñ¶þ\Ìâ3\Projects\zst #
#                          ack\Samples\SensorDemo\CC2530DB\ -I                #
#                          F:\Ã¿ÈÕÊµÑµ\3.13¹úÈü2015ÈÎÎñ¶þ\Ìâ3\Projects\zstack #
#                          \Samples\SensorDemo\CC2530DB\..\SOURCE\ -I         #
#                          F:\Ã¿ÈÕÊµÑµ\3.13¹úÈü2015ÈÎÎñ¶þ\Ìâ3\Projects\zstack #
#                          \Samples\SensorDemo\CC2530DB\..\MYAPP\ -I          #
#                          F:\Ã¿ÈÕÊµÑµ\3.13¹úÈü2015ÈÎÎñ¶þ\Ìâ3\Projects\zstack #
#                          \Samples\SensorDemo\CC2530DB\..\sensor_drv\ -I     #
#                          F:\Ã¿ÈÕÊµÑµ\3.13¹úÈü2015ÈÎÎñ¶þ\Ìâ3\Projects\zstack #
#                          \Samples\SensorDemo\CC2530DB\..\..\..\ZMAIN\TI2530 #
#                          DB\ -I F:\Ã¿ÈÕÊµÑµ\3.13¹úÈü2015ÈÎÎñ¶þ\Ìâ3\Projects #
#                          \zstack\Samples\SensorDemo\CC2530DB\..\..\..\..\.. #
#                          \COMPONENTS\MT\ -I F:\Ã¿ÈÕÊµÑµ\3.13¹úÈü2015ÈÎÎñ¶þ\ #
#                          Ìâ3\Projects\zstack\Samples\SensorDemo\CC2530DB\.. #
#                          \..\..\..\..\COMPONENTS\HAL\INCLUDE\ -I            #
#                          F:\Ã¿ÈÕÊµÑµ\3.13¹úÈü2015ÈÎÎñ¶þ\Ìâ3\Projects\zstack #
#                          \Samples\SensorDemo\CC2530DB\..\..\..\..\..\COMPON #
#                          ENTS\HAL\TARGET\CC2530EB\ -I                       #
#                          F:\Ã¿ÈÕÊµÑµ\3.13¹úÈü2015ÈÎÎñ¶þ\Ìâ3\Projects\zstack #
#                          \Samples\SensorDemo\CC2530DB\..\..\..\..\..\COMPON #
#                          ENTS\OSAL\MCU\CCSOC\ -I F:\Ã¿ÈÕÊµÑµ\3.13¹úÈü2015ÈÎ #
#                          Îñ¶þ\Ìâ3\Projects\zstack\Samples\SensorDemo\CC2530 #
#                          DB\..\..\..\..\..\COMPONENTS\OSAL\INCLUDE\ -I      #
#                          F:\Ã¿ÈÕÊµÑµ\3.13¹úÈü2015ÈÎÎñ¶þ\Ìâ3\Projects\zstack #
#                          \Samples\SensorDemo\CC2530DB\..\..\..\..\..\COMPON #
#                          ENTS\STACK\AF\ -I F:\Ã¿ÈÕÊµÑµ\3.13¹úÈü2015ÈÎÎñ¶þ\Ì #
#                          â3\Projects\zstack\Samples\SensorDemo\CC2530DB\..\ #
#                          ..\..\..\..\COMPONENTS\STACK\NWK\ -I               #
#                          F:\Ã¿ÈÕÊµÑµ\3.13¹úÈü2015ÈÎÎñ¶þ\Ìâ3\Projects\zstack #
#                          \Samples\SensorDemo\CC2530DB\..\..\..\..\..\COMPON #
#                          ENTS\STACK\SEC\ -I F:\Ã¿ÈÕÊµÑµ\3.13¹úÈü2015ÈÎÎñ¶þ\ #
#                          Ìâ3\Projects\zstack\Samples\SensorDemo\CC2530DB\.. #
#                          \..\..\..\..\COMPONENTS\STACK\SAPI\ -I             #
#                          F:\Ã¿ÈÕÊµÑµ\3.13¹úÈü2015ÈÎÎñ¶þ\Ìâ3\Projects\zstack #
#                          \Samples\SensorDemo\CC2530DB\..\..\..\..\..\COMPON #
#                          ENTS\STACK\SYS\ -I F:\Ã¿ÈÕÊµÑµ\3.13¹úÈü2015ÈÎÎñ¶þ\ #
#                          Ìâ3\Projects\zstack\Samples\SensorDemo\CC2530DB\.. #
#                          \..\..\..\..\COMPONENTS\STACK\ZDO\ -I              #
#                          F:\Ã¿ÈÕÊµÑµ\3.13¹úÈü2015ÈÎÎñ¶þ\Ìâ3\Projects\zstack #
#                          \Samples\SensorDemo\CC2530DB\..\..\..\..\..\COMPON #
#                          ENTS\ZMAC\F8W\ -I F:\Ã¿ÈÕÊµÑµ\3.13¹úÈü2015ÈÎÎñ¶þ\Ì #
#                          â3\Projects\zstack\Samples\SensorDemo\CC2530DB\..\ #
#                          ..\..\..\..\COMPONENTS\ZMAC\ -I                    #
#                          F:\Ã¿ÈÕÊµÑµ\3.13¹úÈü2015ÈÎÎñ¶þ\Ìâ3\Projects\zstack #
#                          \Samples\SensorDemo\CC2530DB\..\..\..\..\..\COMPON #
#                          ENTS\SERVICES\SADDR\ -I F:\Ã¿ÈÕÊµÑµ\3.13¹úÈü2015ÈÎ #
#                          Îñ¶þ\Ìâ3\Projects\zstack\Samples\SensorDemo\CC2530 #
#                          DB\..\..\..\..\..\COMPONENTS\SERVICES\SDATA\ -I    #
#                          F:\Ã¿ÈÕÊµÑµ\3.13¹úÈü2015ÈÎÎñ¶þ\Ìâ3\Projects\zstack #
#                          \Samples\SensorDemo\CC2530DB\..\..\..\..\..\COMPON #
#                          ENTS\MAC\INCLUDE\ -I F:\Ã¿ÈÕÊµÑµ\3.13¹úÈü2015ÈÎÎñ¶ #
#                          þ\Ìâ3\Projects\zstack\Samples\SensorDemo\CC2530DB\ #
#                          ..\..\..\..\..\COMPONENTS\MAC\HIGH_LEVEL\ -I       #
#                          F:\Ã¿ÈÕÊµÑµ\3.13¹úÈü2015ÈÎÎñ¶þ\Ìâ3\Projects\zstack #
#                          \Samples\SensorDemo\CC2530DB\..\..\..\..\..\COMPON #
#                          ENTS\MAC\LOW_LEVEL\srf04\ -I                       #
#                          F:\Ã¿ÈÕÊµÑµ\3.13¹úÈü2015ÈÎÎñ¶þ\Ìâ3\Projects\zstack #
#                          \Samples\SensorDemo\CC2530DB\..\..\..\..\..\COMPON #
#                          ENTS\MAC\LOW_LEVEL\srf04\SINGLE_CHIP\ -Ohz         #
#                          --require_prototypes                               #
#    List file          =  F:\Ã¿ÈÕÊµÑµ\3.13¹úÈü2015ÈÎÎñ¶þ\Ìâ3\Projects\zstack #
#                          \Samples\SensorDemo\CC2530DB\Coord1\List\sh10.lst  #
#    Object file        =  F:\Ã¿ÈÕÊµÑµ\3.13¹úÈü2015ÈÎÎñ¶þ\Ìâ3\Projects\zstack #
#                          \Samples\SensorDemo\CC2530DB\Coord1\Obj\sh10.r51   #
#                                                                             #
#                                                                             #
###############################################################################

F:\Ã¿ÈÕÊµÑµ\3.13¹úÈü2015ÈÎÎñ¶þ\Ìâ3\Projects\zstack\Samples\SensorDemo\SENSOR_DRV\sh10.c
      1          /**************************************************************************************************
      2            Filename:      sh10.c
      3          
      4            Description:    sh10 driver 
      5                            
      6          **************************************************************************************************/
      7          
      8          /******************************************************************************
      9           * INCLUDES
     10           */
     11          #include "ioCC2530.h"

   \                                 In  segment SFR_AN, at 0x90
   \   union <unnamed> volatile __sfr _A_P1
   \                     _A_P1:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xf4
   \   unsigned char volatile __sfr P1SEL
   \                     P1SEL:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xf6
   \   unsigned char volatile __sfr P1INP
   \                     P1INP:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xf7
   \   unsigned char volatile __sfr P2INP
   \                     P2INP:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xfe
   \   unsigned char volatile __sfr P1DIR
   \                     P1DIR:
   \   000000                DS 1
     12          #include "hal_types.h"
     13          #include "hal_defs.h"
     14          #include "sh10.h"
     15          
     16          #define BM(n)      (1 << (n))
     17          
     18          #define MCU_IO_TRISTATE   1             
     19          #define MCU_IO_PULLUP     2
     20          #define MCU_IO_PULLDOWN   3
     21          
     22          #define MCU_IO_OUTPUT(port, pin, val)  MCU_IO_OUTPUT_PREP(port, pin, val)
     23          #define MCU_IO_OUTPUT_PREP(port, pin, val)  st( P##port##SEL &= ~BM(pin); P##port##_##pin## = val; P##port##DIR |= BM(pin); )
     24          #define MCU_IO_INPUT(port, pin, func)  MCU_IO_INPUT_PREP(port, pin, func)
     25          #define MCU_IO_INPUT_PREP(port, pin, func)  st( P##port##SEL &= ~BM(pin); P##port##DIR &= ~BM(pin); switch (func) { case MCU_IO_PULLUP: P##port##INP &= ~BM(pin); P2INP &= ~BM(port + 5); break; case MCU_IO_PULLDOWN: P##port##INP &= ~BM(pin); P2INP |= BM(port + 5); break; default: P##port##INP |= BM(pin); break; } )
     26          #define MCU_IO_GET(port, pin)          MCU_IO_GET_PREP(port, pin)
     27          #define MCU_IO_GET_PREP(port, pin)          (P##port## & BM(pin))
     28          
     29           // zsatck×éÍøÒ»¶¨ÒªÓÃÐÂ°å£¬²»ÄÜÓÃ¾ÉÍøi/o
     30          
     31          /***********ÐÂ°å°åIOÉèÖÃ********************/
     32          #define HAL_BOARD_IO_SHT_SCK_PORT           1
     33          #define HAL_BOARD_IO_SHT_SCK_PIN             6
     34          #define HAL_BOARD_IO_SHT_SDA_PORT           1
     35          #define HAL_BOARD_IO_SHT_SDA_PIN             5
     36          
     37          
     38          
     39          #define HAL_SHT_SCK_DIR_OUT()          MCU_IO_OUTPUT(HAL_BOARD_IO_SHT_SCK_PORT, HAL_BOARD_IO_SHT_SCK_PIN,0)
     40          #define HAL_SHT_SCK_SET()                  MCU_IO_OUTPUT(HAL_BOARD_IO_SHT_SCK_PORT, HAL_BOARD_IO_SHT_SCK_PIN,1)
     41          #define HAL_SHT_SCK_CLR()                  MCU_IO_OUTPUT(HAL_BOARD_IO_SHT_SCK_PORT, HAL_BOARD_IO_SHT_SCK_PIN,0)
     42          
     43          #define HAL_SHT_SDA_SET()                 MCU_IO_OUTPUT(HAL_BOARD_IO_SHT_SDA_PORT, HAL_BOARD_IO_SHT_SDA_PIN,1)
     44          #define HAL_SHT_SDA_CLR()                 MCU_IO_OUTPUT(HAL_BOARD_IO_SHT_SDA_PORT, HAL_BOARD_IO_SHT_SDA_PIN,0)
     45          #define HAL_SHT_SDA_DIR_OUT()         MCU_IO_OUTPUT(HAL_BOARD_IO_SHT_SDA_PORT, HAL_BOARD_IO_SHT_SDA_PIN,1)
     46          #define HAL_SHT_SDA_DIR_IN()           MCU_IO_INPUT(HAL_BOARD_IO_SHT_SDA_PORT, HAL_BOARD_IO_SHT_SDA_PIN,2)
     47          #define HAL_SHT_SDA_VAL()                MCU_IO_GET(HAL_BOARD_IO_SHT_SDA_PORT, HAL_BOARD_IO_SHT_SDA_PIN)     
     48          
     49          
     50          
     51          
     52          #define ACK 1
     53          #define noACK 0
     54          #define measure_temp 0x03 //²âÁ¿ÎÂ¶ÈÃüÁî
     55          #define measure_humi 0x05 //²âÁ¿Êª¶ÈÃüÁî
     56          #define RESET        0x1e //ÈíÆô¶¯
     57          
     58          #define     uchar    unsigned   char
     59          #define     uint     unsigned   short
     60          #define     ulong    unsigned   long
     61          
     62          //------------------------Êý¾Ý½á¹¹Ìå¶¨Òå---------------------------
     63          typedef union                      //±£´æËù²âµÃµÄÎÂ¶È£¦Êª¶ÈÖµ
     64          { 
     65          	uint  i;
     66          	float f;
     67          } value;
     68          //WENSHIDU S;
     69          
     70          /******************************************************************************
     71           * LOCAL FUNCTIONS
     72           */
     73          
     74          void SHT11_DELAY(uint16 usec);
     75          char write_byte(unsigned char value); 	  
     76          char read_byte(unsigned char ack);		
     77          void transstart(void);
     78          char s_measure(unsigned char *p_value, unsigned char *p_checksum, unsigned char mode);
     79          void calc_sth11(float *p_humidity ,float *p_temperature);
     80          
     81          #define SENSOR_SHT10
     82          
     83          #if defined SENSOR_SHT10
     84          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     85          void SHT11_DELAY(uint16 usec)
   \                     SHT11_DELAY:
     86          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
     87          	usec >>= 1;
   \   000000   EB           MOV     A,R3
   \   000001   C3           CLR     C
   \   000002   13           RRC     A
   \   000003   FB           MOV     R3,A
   \   000004   EA           MOV     A,R2
   \   000005   13           RRC     A
   \   000006   FA           MOV     R2,A
   \   000007   8010         SJMP    ??SHT11_DELAY_0
     88          	while (usec--)
     89          	{
     90          		asm("NOP"); 
   \                     ??SHT11_DELAY_1:
   \   000009   00           NOP
     91          		asm("NOP");  
   \   00000A   00           NOP
     92          		asm("NOP");  
   \   00000B   00           NOP
     93          		asm("NOP");
   \   00000C   00           NOP
     94          		
     95          		asm("NOP");
   \   00000D   00           NOP
     96          		asm("NOP");
   \   00000E   00           NOP
     97          		asm("NOP");
   \   00000F   00           NOP
     98          		asm("NOP");
   \   000010   00           NOP
     99          		
    100          		asm("NOP");
   \   000011   00           NOP
    101          		asm("NOP");
   \   000012   00           NOP
    102          		asm("NOP");
   \   000013   00           NOP
    103          		asm("NOP");
   \   000014   00           NOP
    104          		
    105          		asm("NOP");
   \   000015   00           NOP
    106          		asm("NOP");
   \   000016   00           NOP
    107          		asm("NOP");
   \   000017   00           NOP
    108          		asm("NOP");
   \   000018   00           NOP
    109          	}	
   \                     ??SHT11_DELAY_0:
   \   000019   EA           MOV     A,R2
   \   00001A   F8           MOV     R0,A
   \   00001B   EB           MOV     A,R3
   \   00001C   F9           MOV     R1,A
   \   00001D   E8           MOV     A,R0
   \   00001E   24FF         ADD     A,#-0x1
   \   000020   1A           DEC     R2
   \   000021   E9           MOV     A,R1
   \   000022   34FF         ADDC    A,#-0x1
   \   000024   FB           MOV     R3,A
   \   000025   E8           MOV     A,R0
   \   000026   49           ORL     A,R1
   \   000027   70E0         JNZ     ??SHT11_DELAY_1
    110          }
   \   000029   02....       LJMP    ?BRET
    111          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    112          char write_byte(unsigned char value)
   \                     write_byte:
    113          { 
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FE           MOV     R6,A
    114            	unsigned char  i,error=0;
    115          
    116          	for (i=0x80;i>0;i/=2)           
   \   000007   7F80         MOV     R7,#-0x80
    117          	{ 
    118          		if (i & value) 
   \                     ??write_byte_0:
   \   000009   EF           MOV     A,R7
   \   00000A   5E           ANL     A,R6
   \   00000B   53F4DF       ANL     0xf4,#0xdf
   \   00000E   6004         JZ      ??write_byte_1
    119          			HAL_SHT_SDA_SET();           
   \   000010   D295         SETB    0x90.5
   \   000012   8002         SJMP    ??write_byte_2
    120          		else 
    121          			HAL_SHT_SDA_CLR();
   \                     ??write_byte_1:
   \   000014   C295         CLR     0x90.5
   \                     ??write_byte_2:
   \   000016   12....       LCALL   ?Subroutine3 & 0xFFFF
    122          
    123          		HAL_SHT_SCK_SET();               
    124          		SHT11_DELAY(1);                    
    125          		HAL_SHT_SCK_CLR();
    126          	}
   \                     ??CrossCallReturnLabel_0:
   \   000019   EF           MOV     A,R7
   \   00001A   C3           CLR     C
   \   00001B   13           RRC     A
   \   00001C   FF           MOV     R7,A
   \   00001D   70EA         JNZ     ??write_byte_0
    127          	
    128          	HAL_SHT_SDA_SET();                 
   \   00001F   12....       LCALL   ?Subroutine5 & 0xFFFF
    129          	HAL_SHT_SDA_DIR_IN();
    130          	HAL_SHT_SCK_SET();               
   \                     ??CrossCallReturnLabel_30:
   \   000022   12....       LCALL   ?Subroutine9 & 0xFFFF
    131          	error=HAL_SHT_SDA_VAL();         
   \                     ??CrossCallReturnLabel_12:
   \   000025   E590         MOV     A,0x90
   \   000027   F8           MOV     R0,A
    132          	HAL_SHT_SCK_CLR();
   \   000028   12....       LCALL   ?Subroutine7 & 0xFFFF
    133          
    134          	return error;                   
   \                     ??CrossCallReturnLabel_6:
   \   00002B   7420         MOV     A,#0x20
   \   00002D   58           ANL     A,R0
   \   00002E   F9           MOV     R1,A
   \   00002F                REQUIRE ?Subroutine1
   \   00002F                REQUIRE P1SEL
   \   00002F                REQUIRE _A_P1
   \   00002F                REQUIRE P1DIR
   \   00002F                REQUIRE P1INP
   \   00002F                REQUIRE P2INP
   \   00002F                ; // Fall through to label ?Subroutine1
    135          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   7F01         MOV     R7,#0x1
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine5:
   \   000000   12....       LCALL   ?Subroutine15 & 0xFFFF
   \                     ??CrossCallReturnLabel_26:
   \   000003                REQUIRE ??Subroutine17_0
   \   000003                ; // Fall through to label ??Subroutine17_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine17_0:
   \   000000   53F4DF       ANL     0xf4,#0xdf
   \   000003   53FEDF       ANL     0xfe,#0xdf
   \   000006   53F6DF       ANL     0xf6,#0xdf
   \   000009   53F7BF       ANL     0xf7,#0xbf
   \   00000C   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine9:
   \   000000   12....       LCALL   ?Subroutine16 & 0xFFFF
   \                     ??CrossCallReturnLabel_28:
   \   000003   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine16:
   \   000000   53F4BF       ANL     0xf4,#0xbf
   \   000003   D296         SETB    0x90.6
   \   000005   43FE40       ORL     0xfe,#0x40
   \   000008   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine7:
   \   000000   12....       LCALL   ?Subroutine14 & 0xFFFF
   \                     ??CrossCallReturnLabel_23:
   \   000003   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine3:
   \   000000   43FE20       ORL     0xfe,#0x20
   \   000003   12....       LCALL   ?Subroutine13 & 0xFFFF
   \                     ??CrossCallReturnLabel_21:
   \   000006   12....       LCALL   ?Subroutine14 & 0xFFFF
   \                     ??CrossCallReturnLabel_24:
   \   000009   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine14:
   \   000000   53F4BF       ANL     0xf4,#0xbf
   \   000003   C296         CLR     0x90.6
   \   000005   43FE40       ORL     0xfe,#0x40
   \   000008   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine13:
   \   000000   12....       LCALL   ?Subroutine16 & 0xFFFF
   \                     ??CrossCallReturnLabel_29:
   \   000003                ; Setup parameters for call to function SHT11_DELAY
   \   000003                ; Setup parameters for call to function SHT11_DELAY
   \   000003                ; Setup parameters for call to function SHT11_DELAY
   \   000003                ; Setup parameters for call to function SHT11_DELAY
   \   000003   7A01         MOV     R2,#0x1
   \   000005   7B00         MOV     R3,#0x0
   \   000007   12....       LCALL   ??SHT11_DELAY?relay
   \   00000A   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine15:
   \   000000   53F4DF       ANL     0xf4,#0xdf
   \   000003   D295         SETB    0x90.5
   \   000005   43FE20       ORL     0xfe,#0x20
   \   000008   22           RET
    136          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    137          char read_byte(unsigned char ack)
   \                     read_byte:
    138          { 
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FE           MOV     R6,A
    139          	unsigned char i,val=0;
   \   000007   75..00       MOV     ?V0 + 0,#0x0
    140          
    141          	HAL_SHT_SDA_SET();                
   \   00000A   12....       LCALL   ?Subroutine5 & 0xFFFF
    142          	HAL_SHT_SDA_DIR_IN();
    143          	for (i=0x80;i>0;i/=2)            
   \                     ??CrossCallReturnLabel_31:
   \   00000D   7880         MOV     R0,#-0x80
    144          	{ 
    145          		HAL_SHT_SCK_SET();               
   \                     ??read_byte_0:
   \   00000F   12....       LCALL   ?Subroutine9 & 0xFFFF
    146          		if (HAL_SHT_SDA_VAL()) 
   \                     ??CrossCallReturnLabel_13:
   \   000012   A295         MOV     C,0x90.5
   \   000014   5003         JNC     ??read_byte_1
    147          			val=(val | i);               
   \   000016   E8           MOV     A,R0
   \   000017   42..         ORL     ?V0 + 0,A
    148          		HAL_SHT_SCK_CLR();
   \                     ??read_byte_1:
   \   000019   12....       LCALL   ?Subroutine7 & 0xFFFF
    149          	}
   \                     ??CrossCallReturnLabel_7:
   \   00001C   E8           MOV     A,R0
   \   00001D   C3           CLR     C
   \   00001E   13           RRC     A
   \   00001F   F8           MOV     R0,A
   \   000020   70ED         JNZ     ??read_byte_0
    150          	MCU_IO_OUTPUT(HAL_BOARD_IO_SHT_SDA_PORT, HAL_BOARD_IO_SHT_SDA_PIN,!ack);  
   \   000022   53F4DF       ANL     0xf4,#0xdf
   \   000025   EE           MOV     A,R6
   \   000026   7004         JNZ     ??read_byte_2
   \   000028   7401         MOV     A,#0x1
   \   00002A   8001         SJMP    ??read_byte_3
   \                     ??read_byte_2:
   \   00002C   E4           CLR     A
   \                     ??read_byte_3:
   \   00002D   C4           SWAP    A
   \   00002E   33           RLC     A
   \   00002F   54E0         ANL     A,#0xe0
   \   000031   F8           MOV     R0,A
   \   000032   E590         MOV     A,0x90
   \   000034   54DF         ANL     A,#0xdf
   \   000036   48           ORL     A,R0
   \   000037   F590         MOV     0x90,A
   \   000039   12....       LCALL   ?Subroutine3 & 0xFFFF
    151          	HAL_SHT_SCK_SET();                            
    152          	SHT11_DELAY(1);                             
    153          	HAL_SHT_SCK_CLR();						    
    154          	HAL_SHT_SDA_SET();                         
   \                     ??CrossCallReturnLabel_1:
   \   00003C   12....       LCALL   ?Subroutine10 & 0xFFFF
    155          
    156          	return val;
   \                     ??CrossCallReturnLabel_15:
   \   00003F   A9..         MOV     R1,?V0 + 0
   \   000041   80..         SJMP    ?Subroutine1
   \   000043                REQUIRE P1SEL
   \   000043                REQUIRE _A_P1
   \   000043                REQUIRE P1DIR
   \   000043                REQUIRE P1INP
   \   000043                REQUIRE P2INP
    157          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine10:
   \   000000   12....       LCALL   ?Subroutine15 & 0xFFFF
   \                     ??CrossCallReturnLabel_27:
   \   000003   22           RET
    158          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    159          void transstart(void)
   \                     transstart:
    160          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    161          	HAL_SHT_SCK_SET();
   \   000004   12....       LCALL   ?Subroutine6 & 0xFFFF
    162          	SHT11_DELAY(1); 
    163          	HAL_SHT_SDA_CLR();
   \                     ??CrossCallReturnLabel_4:
   \   000007   C295         CLR     0x90.5
   \   000009   12....       LCALL   ?Subroutine4 & 0xFFFF
    164          	SHT11_DELAY(1);  
    165          	HAL_SHT_SCK_CLR();
    166          	SHT11_DELAY(2); 
    167          	HAL_SHT_SCK_SET();
   \                     ??CrossCallReturnLabel_2:
   \   00000C   12....       LCALL   ?Subroutine6 & 0xFFFF
    168          	SHT11_DELAY(1); 
    169          
    170          	HAL_SHT_SDA_SET(); 
   \                     ??CrossCallReturnLabel_5:
   \   00000F   D295         SETB    0x90.5
   \   000011   12....       LCALL   ?Subroutine4 & 0xFFFF
    171          	SHT11_DELAY(1); 
    172          	HAL_SHT_SCK_CLR();
    173          	SHT11_DELAY(2); 
    174          	HAL_SHT_SDA_CLR();	
   \                     ??CrossCallReturnLabel_3:
   \   000014   53F4DF       ANL     0xf4,#0xdf
   \   000017   C295         CLR     0x90.5
   \   000019   43FE20       ORL     0xfe,#0x20
    175          }
   \   00001C                REQUIRE ?Subroutine0
   \   00001C                REQUIRE P1SEL
   \   00001C                REQUIRE _A_P1
   \   00001C                REQUIRE P1DIR
   \   00001C                ; // Fall through to label ?Subroutine0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   D083         POP     DPH
   \   000002   D082         POP     DPL
   \   000004   02....       LJMP    ?BRET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine6:
   \   000000   12....       LCALL   ?Subroutine13 & 0xFFFF
   \                     ??CrossCallReturnLabel_22:
   \   000003   53F4DF       ANL     0xf4,#0xdf
   \   000006   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine4:
   \   000000   43FE20       ORL     0xfe,#0x20
   \   000003                ; Setup parameters for call to function SHT11_DELAY
   \   000003                ; Setup parameters for call to function SHT11_DELAY
   \   000003   7A01         MOV     R2,#0x1
   \   000005   7B00         MOV     R3,#0x0
   \   000007   12....       LCALL   ??SHT11_DELAY?relay
   \   00000A   12....       LCALL   ?Subroutine14 & 0xFFFF
   \                     ??CrossCallReturnLabel_25:
   \   00000D                ; Setup parameters for call to function SHT11_DELAY
   \   00000D                ; Setup parameters for call to function SHT11_DELAY
   \   00000D   7A02         MOV     R2,#0x2
   \   00000F   7B00         MOV     R3,#0x0
   \   000011   12....       LCALL   ??SHT11_DELAY?relay
   \   000014   22           RET
    176          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    177          void connectionreset(void)
   \                     connectionreset:
    178          {  
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    179          	unsigned char i; 
    180          	HAL_SHT_SDA_SET(); 
   \   000004   12....       LCALL   ?Subroutine10 & 0xFFFF
    181          	HAL_SHT_SCK_CLR();                   
   \                     ??CrossCallReturnLabel_16:
   \   000007   12....       LCALL   ?Subroutine7 & 0xFFFF
    182          	for(i=0;i<9;i++)                    
   \                     ??CrossCallReturnLabel_8:
   \   00000A   7809         MOV     R0,#0x9
    183          	{ 
    184          		HAL_SHT_SCK_SET();
   \                     ??connectionreset_0:
   \   00000C   12....       LCALL   ?Subroutine9 & 0xFFFF
    185          		HAL_SHT_SCK_CLR();
   \                     ??CrossCallReturnLabel_14:
   \   00000F   12....       LCALL   ?Subroutine7 & 0xFFFF
    186          	}
   \                     ??CrossCallReturnLabel_9:
   \   000012   18           DEC     R0
   \   000013   E8           MOV     A,R0
   \   000014   70F6         JNZ     ??connectionreset_0
    187          	transstart();                   
   \   000016                ; Setup parameters for call to function transstart
   \   000016   12....       LCALL   ??transstart?relay
    188          }
   \   000019   80..         SJMP    ?Subroutine0
   \   00001B                REQUIRE P1SEL
   \   00001B                REQUIRE _A_P1
   \   00001B                REQUIRE P1DIR
    189          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    190          char s_measure(unsigned char *p_value, unsigned char *p_checksum, unsigned char mode)
   \                     s_measure:
    191          { 
   \   000000   74F2         MOV     A,#-0xe
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 14
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
   \   000009   8C..         MOV     ?V0 + 0,R4
   \   00000B   8D..         MOV     ?V0 + 1,R5
   \   00000D   89..         MOV     ?V0 + 5,R1
    192          	unsigned char error=0;
   \   00000F   75..00       MOV     ?V0 + 4,#0x0
    193          	unsigned int i;
    194          
    195          	connectionreset();
   \   000012                ; Setup parameters for call to function connectionreset
   \   000012   12....       LCALL   ??connectionreset?relay
    196          	switch(mode)
   \   000015   E5..         MOV     A,?V0 + 5
   \   000017   6005         JZ      ??s_measure_0
   \   000019   14           DEC     A
   \   00001A   6006         JZ      ??s_measure_1
   \   00001C   800C         SJMP    ??s_measure_2
    197          	{                    
    198          		case 0	: error+=write_byte(measure_temp); break;
   \                     ??s_measure_0:
   \   00001E                ; Setup parameters for call to function write_byte
   \   00001E   7903         MOV     R1,#0x3
   \   000020   8002         SJMP    ??s_measure_3
    199          		case 1	: error+=write_byte(measure_humi); break;
   \                     ??s_measure_1:
   \   000022                ; Setup parameters for call to function write_byte
   \   000022   7905         MOV     R1,#0x5
   \                     ??s_measure_3:
   \   000024   12....       LCALL   ??write_byte?relay
   \   000027   E9           MOV     A,R1
   \   000028   F5..         MOV     ?V0 + 4,A
    200          		default     : break;	 
    201          	}
    202          	
    203          	HAL_SHT_SDA_DIR_IN();
   \                     ??s_measure_2:
   \   00002A   12....       LCALL   ??Subroutine17_0 & 0xFFFF
    204          	for (i=0;i<65535;i++)
   \                     ??CrossCallReturnLabel_32:
   \   00002D   75..00       MOV     ?V0 + 2,#0x0
   \   000030   75..00       MOV     ?V0 + 3,#0x0
    205          	{
    206          		SHT11_DELAY(10); 
   \                     ??s_measure_4:
   \   000033                ; Setup parameters for call to function SHT11_DELAY
   \   000033   7A0A         MOV     R2,#0xa
   \   000035   7B00         MOV     R3,#0x0
   \   000037   12....       LCALL   ??SHT11_DELAY?relay
    207          		if(HAL_SHT_SDA_VAL()== 0) break;
   \   00003A   A295         MOV     C,0x90.5
   \   00003C   5018         JNC     ??s_measure_5
    208          	}                               
   \   00003E   E5..         MOV     A,?V0 + 2
   \   000040   2401         ADD     A,#0x1
   \   000042   F5..         MOV     ?V0 + 2,A
   \   000044   E5..         MOV     A,?V0 + 3
   \   000046   3400         ADDC    A,#0x0
   \   000048   F5..         MOV     ?V0 + 3,A
   \   00004A   74FF         MOV     A,#-0x1
   \   00004C   65..         XRL     A,?V0 + 2
   \   00004E   7004         JNZ     ??s_measure_6
   \   000050   74FF         MOV     A,#-0x1
   \   000052   65..         XRL     A,?V0 + 3
   \                     ??s_measure_6:
   \   000054   70DD         JNZ     ??s_measure_4
    209          	if(HAL_SHT_SDA_VAL())
   \                     ??s_measure_5:
   \   000056   A295         MOV     C,0x90.5
   \   000058   5002         JNC     ??s_measure_7
    210          	{
    211          		error+=1;
   \   00005A   05..         INC     ?V0 + 4
    212          	}
    213          	
    214          	*(p_value+1)  =read_byte(ACK);   
   \                     ??s_measure_7:
   \   00005C                ; Setup parameters for call to function read_byte
   \   00005C   12....       LCALL   ?Subroutine11 & 0xFFFF
   \                     ??CrossCallReturnLabel_17:
   \   00005F   A3           INC     DPTR
   \   000060   F0           MOVX    @DPTR,A
    215          	*(p_value)=read_byte(ACK);       
   \   000061                ; Setup parameters for call to function read_byte
   \   000061   12....       LCALL   ?Subroutine11 & 0xFFFF
   \                     ??CrossCallReturnLabel_18:
   \   000064   F0           MOVX    @DPTR,A
    216          	*p_checksum =read_byte(noACK);          
   \   000065                ; Setup parameters for call to function read_byte
   \   000065   7900         MOV     R1,#0x0
   \   000067   12....       LCALL   ??read_byte?relay
   \   00006A   E9           MOV     A,R1
   \   00006B   85..82       MOV     DPL,?V0 + 0
   \   00006E   85..83       MOV     DPH,?V0 + 1
   \   000071   F0           MOVX    @DPTR,A
    217          	return error;
   \   000072   A9..         MOV     R1,?V0 + 4
   \   000074                REQUIRE ?Subroutine2
   \   000074                REQUIRE P1SEL
   \   000074                REQUIRE P1DIR
   \   000074                REQUIRE P1INP
   \   000074                REQUIRE P2INP
   \   000074                REQUIRE _A_P1
   \   000074                ; // Fall through to label ?Subroutine2
    218          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine2:
   \   000000   7F06         MOV     R7,#0x6
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine11:
   \   000000   7901         MOV     R1,#0x1
   \   000002   12....       LCALL   ??read_byte?relay
   \   000005   E9           MOV     A,R1
   \   000006   8E82         MOV     DPL,R6
   \   000008   8F83         MOV     DPH,R7
   \   00000A   22           RET
    219          /******************************************************************************
    220           * Ãû³Æ       calc_sth11
    221           * ¹¦ÄÜ       ¼ÆËãÎÂÊª¶ÈÖµ
    222           * Èë¿Ú²ÎÊý   float *p_humidity ,float *p_temperature
    223                          Êª¶È                  ÎÂ¶È
    224           * ³ö¿Ú²ÎÊý   ÎÞ
    225           *****************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    226          void calc_sth11(float *p_humidity ,float *p_temperature)      
   \                     calc_sth11:
    227          { 
   \   000000   74E8         MOV     A,#-0x18
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 24
   \   000005                ; Auto size: 6
   \   000005   74FA         MOV     A,#-0x6
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   85..82       MOV     DPL,?XSP + 0
   \   00000D   85..83       MOV     DPH,?XSP + 1
   \   000010   EA           MOV     A,R2
   \   000011   F0           MOVX    @DPTR,A
   \   000012   A3           INC     DPTR
   \   000013   EB           MOV     A,R3
   \   000014   F0           MOVX    @DPTR,A
   \   000015   EC           MOV     A,R4
   \   000016   FE           MOV     R6,A
   \   000017   ED           MOV     A,R5
   \   000018   FF           MOV     R7,A
    228          	const float C1=-4.0;              
    229          	const float C2=+0.0405;         
    230          	const float C3=-0.0000028;      
    231          	const float T1=+0.01;             
    232          	const float T2=+0.00008;           
    233          	float rh=*p_humidity;            
   \   000019   12....       LCALL   ?Subroutine12 & 0xFFFF
   \                     ??CrossCallReturnLabel_19:
   \   00001C   78..         MOV     R0,#?V0 + 4
   \   00001E   12....       LCALL   ?L_MOV_X
    234          	float t=*p_temperature;          
    235          	float rh_lin;                     
    236          	float rh_true;                    
    237          	float t_C;                        
    238          	t_C=t*0.01 - 40;                    
   \   000021   8E82         MOV     DPL,R6
   \   000023   8F83         MOV     DPH,R7
   \   000025   78..         MOV     R0,#?V0 + 0
   \   000027   12....       LCALL   ?L_MOV_X
   \   00002A   90....       MOV     DPTR,#__Constant_3c23d70a
   \   00002D   78..         MOV     R0,#?V0 + 8
   \   00002F   12....       LCALL   ?L_MOV_X
   \   000032   78..         MOV     R0,#?V0 + 0
   \   000034   79..         MOV     R1,#?V0 + 8
   \   000036   12....       LCALL   ?FLT_MUL
   \   000039   90....       MOV     DPTR,#__Constant_c2200000
   \   00003C   78..         MOV     R0,#?V0 + 8
   \   00003E   12....       LCALL   ?L_MOV_X
   \   000041   78..         MOV     R0,#?V0 + 0
   \   000043   79..         MOV     R1,#?V0 + 8
   \   000045   12....       LCALL   ?FLT_ADD
   \   000048   7402         MOV     A,#0x2
   \   00004A   12....       LCALL   ?XSTACK_DISP0_8
   \   00004D   78..         MOV     R0,#?V0 + 0
   \   00004F   12....       LCALL   ?L_MOV_TO_X
    239          	rh_lin=C3*rh*rh + C2*rh + C1;       
    240          	rh_true=(t_C-25)*(T1+T2*rh)+rh_lin; 
   \   000052   7402         MOV     A,#0x2
   \   000054   12....       LCALL   ?XSTACK_DISP0_8
   \   000057   78..         MOV     R0,#?V0 + 8
   \   000059   12....       LCALL   ?L_MOV_X
   \   00005C   90....       MOV     DPTR,#__Constant_c1c80000
   \   00005F   78..         MOV     R0,#?V0 + 0
   \   000061   12....       LCALL   ?L_MOV_X
   \   000064   78..         MOV     R0,#?V0 + 8
   \   000066   79..         MOV     R1,#?V0 + 0
   \   000068   12....       LCALL   ?FLT_ADD
   \   00006B   85....       MOV     ?V0 + 0,?V0 + 4
   \   00006E   85....       MOV     ?V0 + 1,?V0 + 5
   \   000071   85....       MOV     ?V0 + 2,?V0 + 6
   \   000074   85....       MOV     ?V0 + 3,?V0 + 7
   \   000077   90....       MOV     DPTR,#__Constant_38a7c5ac
   \   00007A   78..         MOV     R0,#?V0 + 12
   \   00007C   12....       LCALL   ?L_MOV_X
   \   00007F   78..         MOV     R0,#?V0 + 0
   \   000081   79..         MOV     R1,#?V0 + 12
   \   000083   12....       LCALL   ?FLT_MUL
   \   000086   90....       MOV     DPTR,#__Constant_3c23d70a
   \   000089   78..         MOV     R0,#?V0 + 12
   \   00008B   12....       LCALL   ?L_MOV_X
   \   00008E   78..         MOV     R0,#?V0 + 0
   \   000090   79..         MOV     R1,#?V0 + 12
   \   000092   12....       LCALL   ?FLT_ADD
   \   000095   78..         MOV     R0,#?V0 + 8
   \   000097   79..         MOV     R1,#?V0 + 0
   \   000099   12....       LCALL   ?FLT_MUL
   \   00009C   85....       MOV     ?V0 + 0,?V0 + 4
   \   00009F   85....       MOV     ?V0 + 1,?V0 + 5
   \   0000A2   85....       MOV     ?V0 + 2,?V0 + 6
   \   0000A5   85....       MOV     ?V0 + 3,?V0 + 7
   \   0000A8   90....       MOV     DPTR,#__Constant_b63be7a2
   \   0000AB   78..         MOV     R0,#?V0 + 12
   \   0000AD   12....       LCALL   ?L_MOV_X
   \   0000B0   78..         MOV     R0,#?V0 + 0
   \   0000B2   79..         MOV     R1,#?V0 + 12
   \   0000B4   12....       LCALL   ?FLT_MUL
   \   0000B7   78..         MOV     R0,#?V0 + 0
   \   0000B9   79..         MOV     R1,#?V0 + 4
   \   0000BB   12....       LCALL   ?FLT_MUL
   \   0000BE   90....       MOV     DPTR,#__Constant_3d25e354
   \   0000C1   78..         MOV     R0,#?V0 + 12
   \   0000C3   12....       LCALL   ?L_MOV_X
   \   0000C6   78..         MOV     R0,#?V0 + 4
   \   0000C8   79..         MOV     R1,#?V0 + 12
   \   0000CA   12....       LCALL   ?FLT_MUL
   \   0000CD   78..         MOV     R0,#?V0 + 0
   \   0000CF   79..         MOV     R1,#?V0 + 4
   \   0000D1   12....       LCALL   ?FLT_ADD
   \   0000D4   90....       MOV     DPTR,#__Constant_c0800000
   \   0000D7   78..         MOV     R0,#?V0 + 4
   \   0000D9   12....       LCALL   ?L_MOV_X
   \   0000DC   78..         MOV     R0,#?V0 + 0
   \   0000DE   79..         MOV     R1,#?V0 + 4
   \   0000E0   12....       LCALL   ?FLT_ADD
   \   0000E3   78..         MOV     R0,#?V0 + 8
   \   0000E5   79..         MOV     R1,#?V0 + 0
   \   0000E7   12....       LCALL   ?FLT_ADD
    241          	if(rh_true>100)rh_true=100;         
   \   0000EA   90....       MOV     DPTR,#__Constant_42c80001
   \   0000ED   78..         MOV     R0,#?V0 + 0
   \   0000EF   12....       LCALL   ?L_MOV_X
   \   0000F2   78..         MOV     R0,#?V0 + 8
   \   0000F4   79..         MOV     R1,#?V0 + 0
   \   0000F6   12....       LCALL   ?FLT_GE
   \   0000F9   5005         JNC     ??calc_sth11_0
   \   0000FB   90....       MOV     DPTR,#__Constant_42c80000
   \   0000FE   8014         SJMP    ??calc_sth11_1
    242          	if(rh_true<0.1)rh_true=0.1;         
   \                     ??calc_sth11_0:
   \   000100   90....       MOV     DPTR,#__Constant_3dcccccd
   \   000103   78..         MOV     R0,#?V0 + 0
   \   000105   12....       LCALL   ?L_MOV_X
   \   000108   78..         MOV     R0,#?V0 + 8
   \   00010A   79..         MOV     R1,#?V0 + 0
   \   00010C   12....       LCALL   ?FLT_LT
   \   00010F   5008         JNC     ??calc_sth11_2
   \   000111   90....       MOV     DPTR,#__Constant_3dcccccd
   \                     ??calc_sth11_1:
   \   000114   78..         MOV     R0,#?V0 + 8
   \   000116   12....       LCALL   ?L_MOV_X
    243          	*p_temperature=t_C;                 
   \                     ??calc_sth11_2:
   \   000119   7402         MOV     A,#0x2
   \   00011B   12....       LCALL   ?XSTACK_DISP0_8
   \   00011E   12....       LCALL   ?XLOAD_R2345
   \   000121   8E82         MOV     DPL,R6
   \   000123   8F83         MOV     DPH,R7
   \   000125   12....       LCALL   ?XSTORE_R2345
    244          	*p_humidity=rh_true;                
   \   000128   12....       LCALL   ?Subroutine12 & 0xFFFF
   \                     ??CrossCallReturnLabel_20:
   \   00012B   78..         MOV     R0,#?V0 + 8
   \   00012D   12....       LCALL   ?L_MOV_TO_X
    245          }
   \   000130   7406         MOV     A,#0x6
   \   000132   12....       LCALL   ?DEALLOC_XSTACK8
   \   000135   7F10         MOV     R7,#0x10
   \   000137   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine12:
   \   000000   85..82       MOV     DPL,?XSP + 0
   \   000003   85..83       MOV     DPH,?XSP + 1
   \   000006   E0           MOVX    A,@DPTR
   \   000007   F8           MOV     R0,A
   \   000008   A3           INC     DPTR
   \   000009   E0           MOVX    A,@DPTR
   \   00000A   F583         MOV     DPH,A
   \   00000C   8882         MOV     DPL,R0
   \   00000E   22           RET
    246          
    247          /******************************************************************************
    248           * Ãû³Æ       call_sht11
    249           * ¹¦ÄÜ       ¶ÁÈ¡SH1xÎÂÊª¶ÈÖµ
    250           * Èë¿Ú²ÎÊý   void call_sht11(unsigned int *tem_val,unsigned int *hum_val)
    251                      *tem_val:ÎÂ¶È´æ·ÅµØÖ·£¬0.1¶È·Ö±æÂÊ
    252                      *hum_val:Êª¶È´æ·ÅµØÖ·£¬0.1·Ö±æÂÊ
    253           * ³ö¿Ú²ÎÊý  ÎÞ  
    254           *****************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    255          void call_sht11( int16 *tem_val, int16 *hum_val)
   \                     call_sht11:
    256          { 
   \   000000   74F2         MOV     A,#-0xe
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 14
   \   000005                ; Auto size: 9
   \   000005   74F7         MOV     A,#-0x9
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   8A..         MOV     ?V0 + 4,R2
   \   00000C   8B..         MOV     ?V0 + 5,R3
   \   00000E   EC           MOV     A,R4
   \   00000F   FE           MOV     R6,A
   \   000010   ED           MOV     A,R5
   \   000011   FF           MOV     R7,A
    257          	value humi_val,temp_val;
    258          	unsigned char error = 0,checksum;
    259                  *tem_val=-1;
   \   000012   8A82         MOV     DPL,R2
   \   000014   8B83         MOV     DPH,R3
   \   000016   74FF         MOV     A,#-0x1
   \   000018   F0           MOVX    @DPTR,A
   \   000019   A3           INC     DPTR
   \   00001A   F0           MOVX    @DPTR,A
    260                  *hum_val=0;
   \   00001B   8E82         MOV     DPL,R6
   \   00001D   8F83         MOV     DPH,R7
   \   00001F   E4           CLR     A
   \   000020   F0           MOVX    @DPTR,A
   \   000021   A3           INC     DPTR
   \   000022   F0           MOVX    @DPTR,A
    261                  //Æô¶¯SH1xµÄÊª¶È²âÁ¿
    262                 	error+=s_measure((unsigned char*) &humi_val.i,&checksum,1); 
   \   000023                ; Setup parameters for call to function s_measure
   \   000023   7901         MOV     R1,#0x1
   \   000025   85..82       MOV     DPL,?XSP + 0
   \   000028   85..83       MOV     DPH,?XSP + 1
   \   00002B   AC82         MOV     R4,DPL
   \   00002D   AD83         MOV     R5,DPH
   \   00002F   7405         MOV     A,#0x5
   \   000031   12....       LCALL   ?XSTACK_DISP0_8
   \   000034   AA82         MOV     R2,DPL
   \   000036   AB83         MOV     R3,DPH
   \   000038   12....       LCALL   ??s_measure?relay
   \   00003B   E9           MOV     A,R1
   \   00003C   F5..         MOV     ?V0 + 0,A
    263                  //Æô¶¯SH1xµÄÎÂ¶È²âÁ¿
    264          	error+=s_measure((unsigned char*) &temp_val.i,&checksum,0);  
    265          	if(error!=0)
   \   00003E                ; Setup parameters for call to function s_measure
   \   00003E   7900         MOV     R1,#0x0
   \   000040   85..82       MOV     DPL,?XSP + 0
   \   000043   85..83       MOV     DPH,?XSP + 1
   \   000046   AC82         MOV     R4,DPL
   \   000048   AD83         MOV     R5,DPH
   \   00004A   7401         MOV     A,#0x1
   \   00004C   12....       LCALL   ?XSTACK_DISP0_8
   \   00004F   AA82         MOV     R2,DPL
   \   000051   AB83         MOV     R3,DPH
   \   000053   12....       LCALL   ??s_measure?relay
   \   000056   E9           MOV     A,R1
   \   000057   25..         ADD     A,?V0 + 0
   \   000059   6006         JZ      ??call_sht11_0
    266          	{   //²âÊÔ´íÎó£¬½øÐÐÈí¸´Î»
    267          	    connectionreset();                                       
   \   00005B                ; Setup parameters for call to function connectionreset
   \   00005B   12....       LCALL   ??connectionreset?relay
   \   00005E   02....       LJMP    ??call_sht11_1 & 0xFFFF
    268          	}
    269          	else
    270          	{   //²âÊÔÊý¾Ý´¦Àí
    271                      humi_val.f=(float)humi_val.i;                    
   \                     ??call_sht11_0:
   \   000061   7405         MOV     A,#0x5
   \   000063   12....       LCALL   ?XSTACK_DISP0_8
   \   000066   12....       LCALL   ?Subroutine8 & 0xFFFF
   \                     ??CrossCallReturnLabel_10:
   \   000069   12....       LCALL   ?UL_TO_FLT
   \   00006C   7405         MOV     A,#0x5
   \   00006E   12....       LCALL   ?XSTACK_DISP0_8
   \   000071   78..         MOV     R0,#?V0 + 0
   \   000073   12....       LCALL   ?L_MOV_TO_X
    272          	    temp_val.f=(float)temp_val.i;
   \   000076   7401         MOV     A,#0x1
   \   000078   12....       LCALL   ?XSTACK_DISP0_8
   \   00007B   12....       LCALL   ?Subroutine8 & 0xFFFF
   \                     ??CrossCallReturnLabel_11:
   \   00007E   12....       LCALL   ?UL_TO_FLT
   \   000081   7401         MOV     A,#0x1
   \   000083   12....       LCALL   ?XSTACK_DISP0_8
   \   000086   78..         MOV     R0,#?V0 + 0
   \   000088   12....       LCALL   ?L_MOV_TO_X
    273                      //¼ÆËãÎÂÊª¶ÈÊµ¼ÊÖµ
    274          	    calc_sth11(&humi_val.f,&temp_val.f);
   \   00008B                ; Setup parameters for call to function calc_sth11
   \   00008B   7401         MOV     A,#0x1
   \   00008D   12....       LCALL   ?XSTACK_DISP0_8
   \   000090   AC82         MOV     R4,DPL
   \   000092   AD83         MOV     R5,DPH
   \   000094   7405         MOV     A,#0x5
   \   000096   12....       LCALL   ?XSTACK_DISP0_8
   \   000099   AA82         MOV     R2,DPL
   \   00009B   AB83         MOV     R3,DPH
   \   00009D   12....       LCALL   ??calc_sth11?relay
    275                      //×ª»¯³É0.1µÄ·Ö±æÂÊ
    276                      *tem_val=(int16)temp_val.f*10;
   \   0000A0   7401         MOV     A,#0x1
   \   0000A2   12....       LCALL   ?XSTACK_DISP0_8
   \   0000A5   12....       LCALL   ?XLOAD_R2345
   \   0000A8   12....       LCALL   ?R2345_FLT_TO_L
   \   0000AB   E5..         MOV     A,?V0 + 0
   \   0000AD   75F00A       MOV     B,#0xa
   \   0000B0   A4           MUL     AB
   \   0000B1   F5..         MOV     ?V0 + 0,A
   \   0000B3   A8F0         MOV     R0,B
   \   0000B5   75F00A       MOV     B,#0xa
   \   0000B8   E5..         MOV     A,?V0 + 1
   \   0000BA   A4           MUL     AB
   \   0000BB   28           ADD     A,R0
   \   0000BC   F5..         MOV     ?V0 + 1,A
   \   0000BE   85..82       MOV     DPL,?V0 + 4
   \   0000C1   85..83       MOV     DPH,?V0 + 5
   \   0000C4   E5..         MOV     A,?V0 + 0
   \   0000C6   F0           MOVX    @DPTR,A
   \   0000C7   A3           INC     DPTR
   \   0000C8   E5..         MOV     A,?V0 + 1
   \   0000CA   F0           MOVX    @DPTR,A
    277                      *hum_val=(int16)humi_val.f*10;
   \   0000CB   7405         MOV     A,#0x5
   \   0000CD   12....       LCALL   ?XSTACK_DISP0_8
   \   0000D0   12....       LCALL   ?XLOAD_R2345
   \   0000D3   12....       LCALL   ?R2345_FLT_TO_L
   \   0000D6   E5..         MOV     A,?V0 + 0
   \   0000D8   75F00A       MOV     B,#0xa
   \   0000DB   A4           MUL     AB
   \   0000DC   F5..         MOV     ?V0 + 0,A
   \   0000DE   A8F0         MOV     R0,B
   \   0000E0   75F00A       MOV     B,#0xa
   \   0000E3   E5..         MOV     A,?V0 + 1
   \   0000E5   A4           MUL     AB
   \   0000E6   28           ADD     A,R0
   \   0000E7   F5..         MOV     ?V0 + 1,A
   \   0000E9   8E82         MOV     DPL,R6
   \   0000EB   8F83         MOV     DPH,R7
   \   0000ED   E5..         MOV     A,?V0 + 0
   \   0000EF   F0           MOVX    @DPTR,A
   \   0000F0   A3           INC     DPTR
   \   0000F1   E5..         MOV     A,?V0 + 1
   \   0000F3   F0           MOVX    @DPTR,A
    278          	}    
    279          }
   \                     ??call_sht11_1:
   \   0000F4   7409         MOV     A,#0x9
   \   0000F6   12....       LCALL   ?DEALLOC_XSTACK8
   \   0000F9   02....       LJMP    ?Subroutine2 & 0xFFFF

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine8:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   F5..         MOV     ?V0 + 0,A
   \   000003   A3           INC     DPTR
   \   000004   E0           MOVX    A,@DPTR
   \   000005   F5..         MOV     ?V0 + 1,A
   \   000007   E4           CLR     A
   \   000008   F5..         MOV     ?V0 + 2,A
   \   00000A   F5..         MOV     ?V0 + 3,A
   \   00000C   78..         MOV     R0,#?V0 + 0
   \   00000E   22           RET

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_3c23d70a:
   \   000000   0AD7233C     DD 3C23D70AH

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_c2200000:
   \   000000   000020C2     DD 0C2200000H

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_c1c80000:
   \   000000   0000C8C1     DD 0C1C80000H

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_38a7c5ac:
   \   000000   ACC5A738     DD 38A7C5ACH

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_b63be7a2:
   \   000000   A2E73BB6     DD 0B63BE7A2H

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_3d25e354:
   \   000000   54E3253D     DD 3D25E354H

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_c0800000:
   \   000000   000080C0     DD 0C0800000H

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_42c80001:
   \   000000   0100C842     DD 42C80001H

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_42c80000:
   \   000000   0000C842     DD 42C80000H

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_3dcccccd:
   \   000000   CDCCCC3D     DD 3DCCCCCDH

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SHT11_DELAY?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SHT11_DELAY

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??write_byte?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    write_byte

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??read_byte?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    read_byte

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??transstart?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    transstart

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??connectionreset?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    connectionreset

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??s_measure?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    s_measure

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??calc_sth11?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    calc_sth11

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??call_sht11?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    call_sht11
    280          
    281          #endif
    282          
    283          
    284          
    285          
    286          
    287          
    288          
    289          
    290          
    291          
    292          
    293          
    294          
    295          
    296          
    297          
    298          
    299          
    300          
    301          
    302          
    303          
    304          
    305          
    306          

   Maximum stack usage in bytes:

     Function             ISTACK PSTACK XSTACK
     --------             ------ ------ ------
     SHT11_DELAY              0      0     14
     calc_sth11               0      0     53
     call_sht11               0      0     23
       -> s_measure           0      0     46
       -> s_measure           0      0     46
       -> connectionreset     0      0     46
       -> calc_sth11          0      0     46
     connectionreset          2      0     23
       -> transstart          4      0      0
     read_byte                0      0     23
       -> SHT11_DELAY         0      0     18
     s_measure                1      0     37
       -> connectionreset     0      0     28
       -> write_byte          0      0     28
       -> write_byte          0      0     28
       -> SHT11_DELAY         0      0     28
       -> read_byte           0      0     28
       -> read_byte           0      0     28
       -> read_byte           0      0     28
     transstart               2      0      0
       -> SHT11_DELAY         4      0      0
       -> SHT11_DELAY         4      0      0
       -> SHT11_DELAY         4      0      0
       -> SHT11_DELAY         4      0      0
       -> SHT11_DELAY         4      0      0
       -> SHT11_DELAY         4      0      0
     write_byte               0      0     23
       -> SHT11_DELAY         0      0     18


   Segment part sizes:

     Function/Label          Bytes
     --------------          -----
     _A_P1                      1
     P1SEL                      1
     P1INP                      1
     P2INP                      1
     P1DIR                      1
     SHT11_DELAY               44
     write_byte                47
     ?Subroutine1               5
     ?Subroutine5               3
     ??Subroutine17_0          13
     ?Subroutine9               4
     ?Subroutine16              9
     ?Subroutine7               4
     ?Subroutine3              10
     ?Subroutine14              9
     ?Subroutine13             11
     ?Subroutine15              9
     read_byte                 67
     ?Subroutine10              4
     transstart                28
     ?Subroutine0               7
     ?Subroutine6               7
     ?Subroutine4              21
     connectionreset           27
     s_measure                116
     ?Subroutine2               5
     ?Subroutine11             11
     calc_sth11               314
     ?Subroutine12             15
     call_sht11               252
     ?Subroutine8              15
     __Constant_3c23d70a        4
     __Constant_c2200000        4
     __Constant_c1c80000        4
     __Constant_38a7c5ac        4
     __Constant_b63be7a2        4
     __Constant_3d25e354        4
     __Constant_c0800000        4
     __Constant_42c80001        4
     __Constant_42c80000        4
     __Constant_3dcccccd        4
     ??SHT11_DELAY?relay        6
     ??write_byte?relay         6
     ??read_byte?relay          6
     ??transstart?relay         6
     ??connectionreset?relay    6
     ??s_measure?relay          6
     ??calc_sth11?relay         6
     ??call_sht11?relay         6

 
 1 057 bytes in segment BANKED_CODE
    48 bytes in segment BANK_RELAYS
     5 bytes in segment SFR_AN
    40 bytes in segment XDATA_ROM_C
 
 1 105 bytes of CODE  memory
     0 bytes of CONST memory (+ 40 bytes shared)
     0 bytes of DATA  memory (+  5 bytes shared)

Errors: none
Warnings: none
